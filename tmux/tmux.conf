# tmux.conf
# (for tmux 1.9+ : use latest version if possible)
#
# @seealso
# - http://manpages.ubuntu.com/manpages/precise/man1/tmux.1.html


# 1. Key Bindings {{{
# ===================

# Key combination prefix is <C-a>, not <C-b>
set-option -g prefix C-a
unbind-key C-b

# use <C-a><C-a> to switch window,
# and <C-a>a to control nested sessions
bind-key C-a last-window
bind-key a send-prefix

# enable vi-mode
setw -g mode-keys vi

# enable mouse behavior.
# for this, tmux now captures mouse actions from the terminal.
# (shift+mouse) will allow us to select the raw texts instead.
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# some useful <C-a> combinations
bind-key : command-prompt
bind-key r source-file ~/.tmux.conf \; display "Reloaded from ~/.tmux.conf"
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout
bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# vertical/horizontal split
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"

bind-key > resize-pane -R 5
bind-key < resize-pane -L 5
bind-key + resize-pane -D 2
bind-key - resize-pane -U 2

# pane/windows navigation
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key q display-panes

bind-key C-a last-window
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key 0 select-window -t :0
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9

bind-key Escape copy-mode
bind-key ] paste-buffer

# change name of the current window (shift-a)
bind-key A command-prompt -I "#W" "rename-window '%%'"

# Clunkily connect tmux buffers with the pasteboard.
bind-key y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

set-window-option -g display-panes-time 1500

# }}}



# 2. Appereance {{{
# =================

# Color and Themes
set-option -g default-terminal "screen-256color"

# let pane/window numbers be 1-indexed
set-option -g base-index 1
set-option -g pane-base-index 1

# Status Bar

# Update status every 1 seconds
set-option -g status-interval 1

# No automatic renaming of windows (from commands on execution)
set-window-option -g automatic-rename off

# Set title, which is also showed at iTerm tab
# For special character sequences such as #S, refer to manual
set-option -g set-titles on
set-option -g set-titles-string '#S #I:#W (#h)' # session name, window index, window title, hostname

# Status Bar: auto-generated by tmuxline.vim
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour231,bg=colour31"
set -g status-right-style "none"
set -g pane-active-border-style "fg=colour254"
set -g status-utf8 "on"
set -g status-style "bg=colour234,none"
set -g message-style "fg=colour231,bg=colour31"
set -g pane-border-style "fg=colour240"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=colour250,bg=colour234,underscore"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour250,bg=colour234,none"
set -g status-left "#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour252] #h "
setw -g window-status-format "#[fg=colour244,bg=colour234] #I #[fg=colour250,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour117,bg=colour31] #I #[fg=colour231,bg=colour31,bold] #W #[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]"

# pane border colors
set-option -g pane-border-fg colour238     # inactive pane border: gray
set-option -g pane-border-bg default
set-option -g pane-active-border-fg green  # active pane border: green
set-option -g pane-active-border-bg default

# Set window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# }}}


# 2. vim-tmux-navigator {{{
# =========================

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# I prefer <C-L> as clear screen
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"

# }}}


# 3. Tmux Plugins {{{
# ===================

# List of plugins
# @see https://github.com/tmux-plugins/tpm
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-resurrect      \
'

# tmux-copycat
# use vim-like navigation (n, N)
set -g @copycat_next 'N'
set -g @copycat_prev 'n'

run-shell '~/.tmux/plugins/tpm/tpm'
# }}}
